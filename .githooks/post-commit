#!/bin/sh
# Auto-generated post-commit hook for RC tagging and pushing

# Check last commit message to prevent infinite loop
LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
if echo "$LAST_COMMIT_MSG" | grep -q "\[skip ci\]"; then
    echo "‚è≠Ô∏è  Skipping post-commit hook (commit created by hook itself)"
    exit 0
fi

echo "üè∑Ô∏è  Creating Dev tag for new commit..."

PROJECT_DIR="$(dirname "$(dirname "$0")")"
cd "$PROJECT_DIR" || exit 1

CURRENT_VERSION=$(grep "^mod_version=" gradle.properties | cut -d'=' -f2)

if [ -z "$CURRENT_VERSION" ]; then
    echo "‚ùå Could not read version from gradle.properties"
    exit 1
fi

LAST_DEV_TAG=$(git tag -l "v.*-dev*" --sort=-version:refname | head -n1)
if [ -n "$LAST_DEV_TAG" ]; then
    LAST_VERSION=$(echo "$LAST_DEV_TAG" | sed 's/v\.\([0-9]\+\.[0-9]\+\.[0-9]\+\)-dev[0-9]\+/\1/')
    if [ "$LAST_VERSION" != "$CURRENT_VERSION" ]; then
        echo "üéâ Version change detected: $LAST_VERSION -> $CURRENT_VERSION"
        ./gradlew createGitHubRelease -PreleaseVersion="$LAST_VERSION" -q
    fi
fi

DEV_TAGS=$(git tag -l "v.$CURRENT_VERSION-dev*" | wc -l)
NEXT_DEV=$((DEV_TAGS + 1))
DEV_TAG="v.$CURRENT_VERSION-dev$NEXT_DEV"

echo "üîñ Creating tag: $DEV_TAG"
git tag -a "$DEV_TAG" -m "Auto-generated dev tag $NEXT_DEV for version $CURRENT_VERSION"
git push origin "$DEV_TAG"

# Update the changelog
echo "üìù Updating changelog..."
./gradlew updateChangelog -q

# Commit only if changelog changed
if ! git diff --quiet -- LATEST_CHANGELOG.md; then
  git add LATEST_CHANGELOG.md
  git commit -m "chore: update LATEST_CHANGELOG.md [skip ci]"
else
  echo "‚ÑπÔ∏è No changes in LATEST_CHANGELOG.md"
fi

echo "üéâ Dev tagging complete!"
