#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# Get project directory
PROJECT_DIR=$(git rev-parse --show-toplevel 2>/dev/null || (cd "$(dirname "$0")/../.." && pwd))
cd "$PROJECT_DIR" || exit 1

# Check for skip hooks flag
MSG=$(git log -1 --pretty=%B 2>/dev/null || true)
if echo "$MSG" | grep -qi "\[skip hooks\]"; then
  echo "‚ÑπÔ∏è  Skipping hooks due to [skip hooks] flag"
  exit 0
fi

# Check gradle.properties for mod_version
if ! grep -q '^mod_version=' gradle.properties; then
  echo "WARN: gradle.properties does not contain 'mod_version'" >&2
fi

# Get staged files
staged_files=$(git diff --staged --name-only)

if [ -z "$staged_files" ]; then
  echo "‚ÑπÔ∏è  No staged files found"
  exit 0
fi

echo "üßπ Checking code formatting for staged files..."

# Check if spotless would make changes (without applying them)
if ./gradlew spotlessCheck --quiet 2>/dev/null; then
  echo "‚úÖ Code formatting is already correct"
  exit 0
else
  echo "‚ùå Code formatting issues found!"
  echo ""
  echo "Please run the following command to fix formatting:"
  echo "  ./gradlew spotlessApply"
  echo ""
  echo "Then stage your files again and retry the commit."
  echo ""
  exit 1  # Abort the commit
fi